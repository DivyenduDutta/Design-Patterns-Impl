package com.divyendu.designPatterns.Singleton;

/**
 * Singleton Pattern impl in Java
 * Type of creational pattern. Focuses on:
 * 1. How objects are created
 * 2. Isolate the object creation details itself.
 * 3. Code Independent of the type of object to be created
 * 
 * @author divyendu
 *
 */
public class Singleton<T> {
	private T uniqueInstance;
	private static boolean instance;
	
	//make the constructor private so that clients can't create an instance of it
	private Singleton() {}
	
	/**
	 * Checks whether an instance exists, if it does then return the existing instance otherwise return a new
	 * instance
	 * 
	 * @return Singleton - Unique instance of Singleton class
	 */
	public static <T>Singleton getInstance(Class clazz) {
		if(!instance) {
			instance = true;
			uniqueInstance = new Singleton();
		}
		return uniqueInstance;
	}
}
